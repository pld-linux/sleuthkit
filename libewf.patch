--- sleuthkit-4.6.7/tsk/img/ewf.cpp~	2020-05-01 04:05:39.000000000 +0200
+++ sleuthkit-4.6.7/tsk/img/ewf.cpp	2020-06-01 09:29:02.700329814 +0200
@@ -67,8 +67,13 @@
 
     tsk_take_lock(&(ewf_info->read_lock));
 #if defined( HAVE_LIBEWF_V2_API )
+#if defined( HAVE_LIBEWF_HANDLE_READ_BUFFER_AT_OFFSET )
+    cnt = libewf_handle_read_buffer_at_offset(ewf_info->handle,
+        buf, len, offset, &ewf_error);
+#else
     cnt = libewf_handle_read_random(ewf_info->handle,
         buf, len, offset, &ewf_error);
+#endif
     if (cnt < 0) {
         char *errmsg = NULL;
         tsk_error_reset();
--- sleuthkit-4.12.0/configure.ac.orig	2023-06-18 10:11:54.933025146 +0200
+++ sleuthkit-4.12.0/configure.ac	2023-06-18 11:50:09.761090122 +0200
@@ -164,6 +164,9 @@ dnl Check if we should link with libbfio
 TSK_OPT_DEP_CHECK([libbfio], [], [libbfio], [libbfio.h], [bfio], [libbfio_get_version])
 dnl Check if we should link with libewf
 TSK_OPT_DEP_CHECK([libewf], [EWF], [libewf], [libewf.h], [ewf], [libewf_get_version])
+AS_IF([test "x$ax_libewf" = "xyes"],
+      [AC_CHECK_LIB([ewf], [libewf_handle_read_buffer_at_offset], [AC_DEFINE([HAVE_LIBEWF_HANDLE_READ_BUFFER_AT_OFFSET], [1], [Have libewf_handle_read_buffer_at_offset function])])]
+)
 dnl Check if we should link with libvhdi
 TSK_OPT_DEP_CHECK([libvhdi], [VHDI], [libvhdi], [libvhdi.h], [vhdi], [libvhdi_get_version])
 dnl Check if we should link with libvmdk
